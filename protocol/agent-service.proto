syntax = "proto3";

import "models.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/cego/nebula-provisioner/protocol";

package protocol;

service AgentService {
  rpc Enroll (EnrollRequest) returns (EnrollResponse) {}
  rpc GetEnrollStatus (google.protobuf.Empty) returns (GetEnrollStatusResponse){}
  rpc GetCertificateAuthorityByNetwork (GetCertificateAuthorityByNetworkRequest) returns (GetCertificateAuthorityByNetworkResponse) {}
  rpc GetCRLByNetwork (GetCRLByNetworkRequest) returns (GetCRLByNetworkResponse) {}
}

message EnrollRequest {
  string token = 1;
  string csrPEM = 2;
  repeated string groups = 3;
  string name = 4;
  string requestedIP = 5;
}

message EnrollResponse {
}

message GetEnrollStatusResponse {
  bool isEnrolled = 1;
  bool isEnrollmentRequested = 2;
  EnrollRequest enrollmentRequest = 3;

  string signedPEM = 10;
  google.protobuf.Timestamp issuedAt = 11;
  google.protobuf.Timestamp expiresAt = 12;
  string assignedIP = 13;
  string name = 14;
  repeated string groups = 15;
  string signedPEMFingerprint = 16;

  repeated CertificateAuthority certificateAuthorities = 20;
  repeated NetworkCRL certificateRevocationList = 21;
}

message GetCertificateAuthorityByNetworkRequest {
  repeated string networkNames = 1;
}

message GetCertificateAuthorityByNetworkResponse {
  repeated CertificateAuthority  certificateAuthorities = 1;
}

message GetCRLByNetworkRequest {
  repeated string networkNames = 1;
}

message GetCRLByNetworkResponse {
  repeated NetworkCRL crls = 1;
}
